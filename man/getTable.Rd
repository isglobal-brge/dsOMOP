% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_table.R
\name{getTable}
\alias{getTable}
\title{Get a Table from the OMOP CDM Database}
\usage{
getTable(
  connection,
  tableName,
  conceptFilter = NULL,
  columnFilter = NULL,
  personFilter = NULL,
  mergeColumn = "person_id",
  dropNA = FALSE,
  wideLongitudinal = FALSE,
  completeTimePoints = FALSE,
  dbms,
  schema = NULL,
  vocabularySchema = NULL,
  skipReshape = FALSE
)
}
\arguments{
\item{connection}{A DBI connection object to the OMOP CDM database}

\item{tableName}{Character string specifying the target table name}

\item{conceptFilter}{Optional vector of concept IDs for filtering}

\item{columnFilter}{Optional vector of column names to include}

\item{personFilter}{Optional vector of person IDs for filtering}

\item{mergeColumn}{Character string specifying the merge key column (default: "person_id")}

\item{dropNA}{Logical; whether to remove columns containing only NA values (default: FALSE)}

\item{wideLongitudinal}{Logical; whether to reshape longitudinal data to wide format (default: FALSE)}

\item{completeTimePoints}{Logical; whether to ensure all entities have rows for each date point (default: FALSE)}

\item{dbms}{Character string specifying the database management system}

\item{schema}{Optional character string specifying the database schema}

\item{vocabularySchema}{Optional character string specifying the vocabulary schema}

\item{skipReshape}{Logical; whether to skip the reshaping process entirely (default: FALSE)}
}
\value{
A processed data frame containing the requested table data
}
\description{
Fetches and processes a specified table from an OMOP Common Data Model (CDM) database for use within
the DataSHIELD environment. This function provides comprehensive data retrieval, filtering, and
transformation capabilities while ensuring compliance with DataSHIELD's disclosure control rules.
}
\details{
Retrieve and Process OMOP CDM Table

The function performs several key operations:
\enumerate{
\item Table Retrieval and Validation:
\itemize{
\item Verifies table existence using case-insensitive matching
\item Handles schema-specific table access
\item Manages column name standardization
}
\item Filtering Operations:
\itemize{
\item Column filtering to select specific variables
\item Concept-based filtering using concept IDs
\item Person-level filtering using person IDs
\item Empty column removal (optional)
}
\item Data Type Management:
\itemize{
\item Converts concept_id columns to factors
\item Transforms ID columns to character type
\item Handles numeric and date columns appropriately
}
\item Disclosure Control:
\itemize{
\item Enforces minimum patient count thresholds
\item Validates subset sizes against DataSHIELD parameters
}
\item Data Reshaping:
\itemize{
\item Supports longitudinal data transformation
\item Handles wide/long format conversions
\item Manages concept translations
}
}
}
\examples{
\dontrun{
# Basic table retrieval
conn <- getDatabaseConnection()
person_table <- getTable(conn, "person")

# Filtered retrieval with concept IDs
condition_table <- getTable(
  connection = conn,
  tableName = "condition_occurrence",
  conceptFilter = c(201820, 201254),
  dropNA = TRUE
)

# Longitudinal data with custom merge column
measurement_table <- getTable(
  connection = conn,
  tableName = "measurement",
  mergeColumn = "visit_occurrence_id",
  wideLongitudinal = TRUE
)

# Longitudinal data with complete time points
lab_table <- getTable(
  connection = conn,
  tableName = "measurement",
  conceptFilter = c(3023314, 3024561),  # Glucose and HbA1c
  completeTimePoints = TRUE,
  wideLongitudinal = TRUE
)
}

}
\seealso{
\itemize{
\item \code{\link{getOMOPCDMTableDS}} for the DataSHIELD interface
\item \code{\link{translateTable}} for concept translation details
\item \code{\link{reshapeTable}} for data reshaping operations
}
}
